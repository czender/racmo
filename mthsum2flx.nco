// $Header$ -*-C++-*-

/* Usage: ncap2 -O -S mthsum2flx.nco in.nc out.nc

   Purpose: Convert from monthly sum ("monthlyS") to monthly mean, aka per-second rate (PSR)

   Usage:
   var_nm='smbgl'
   ncap2 -O -v -S ${HOME}/racmo/mthsum2flx.nco ${DATA}/racmo/2.4.1/ts/smbgl_racmo2.4.1_ais_smbgl_198001_202012.nc ~/foo.nc */ 

//if(!exists(var_nm)) var_nm="smbgl";

*yr_srt=1980;
*yr_nbr=41;
*yr_end=yr_srt+yr_nbr;
*mth_nbr=yr_nbr*12;
if($time.size != mth_nbr){
   print($time.size, "ERROR Time dimension size $time.size = %d");
   print(mth_nbr,"Must equal mth_nbr = %d");
} // !time.size

// Create array of same length as time dimension of input variable
*sec_per_mth_no_leap[$time]=0; // [s] noleap 365-day calendar, 0-based indexing
sec_per_mth_no_leap(0:11)={2678400,2419200,2678400,2592000,2678400,2592000,2678400,2678400,2592000,2678400,2592000,2678400};
*feb_sec_lp_yr=2505600; // [s] Seconds in leap year Februaries

sec_per_mth[$time]=0; // [s] Timeseries of seconds-per-month
for(*yr_idx=0;yr_idx<yr_nbr;yr_idx++){
  *mth_idx=yr_idx*12;
  sec_per_mth(mth_idx:mth_idx+11)=sec_per_mth_no_leap(0:11);
} // !yr

for(*yr=yr_srt;yr<yr_end;yr++){
  *feb_idx=(yr-yr_srt)*12+1;
  // Adjust February times for Leap Years
  if(yr%4 == 0 && (yr%100 != 0 || yr%400 == 0)) sec_per_mth(feb_idx)=feb_sec_lp_yr;
} // !yr

// print(sec_per_mth);

@all=get_vars_in();
*sz=@all.size();
for(*idx=0;idx<sz;idx++){
  @var_nm=@all(idx);
  if(*@var_nm.ndims() >= 3){
    // Convert from monthly sum to per-second rate
    *@var_nm/=sec_per_mth;
    // Add " s-1" to units
    *@var_nm@units=push(*@var_nm@units," s-1");
  } // !Var_nm.ndims
} // !idx

